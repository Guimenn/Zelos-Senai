// Script para debugar o mapeamento de tickets
// Execute no console do navegador

console.log('üîß Debugando mapeamento de tickets...\n');

// Token v√°lido
const validToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsInJvbGUiOiJBZG1pbiIsIm5hbWUiOiJBZG1pbiBUZXN0ZSIsImVtYWlsIjoiYWRtaW5AdGVzdGUuY29tIiwiaWF0IjoxNzU3MDk0MjY3LCJleHAiOjE3NTcxODA2Njd9.BWUmErTRwweGnoc9MY4DYxIwhBgrM4B7daUWWotlrrc';

// Definir token
document.cookie = `auth_token=${validToken}; path=/; max-age=${24 * 60 * 60}`;

console.log('‚úÖ Token definido');

// Fun√ß√£o para testar o mapeamento
async function testTicketMapping() {
    console.log('üîç Testando mapeamento de tickets...');
    
    try {
        // Buscar todos os tickets
        const response = await fetch('/helpdesk/tickets', {
            headers: {
                'Authorization': `Bearer ${validToken}`,
                'Content-Type': 'application/json'
            }
        });
        
        if (response.ok) {
            const tickets = await response.json();
            console.log('‚úÖ Tickets encontrados:', tickets.length);
            
            // Procurar pelo ticket espec√≠fico
            const targetTicket = tickets.find(t => 
                t.ticket_number === 'TKT-273982-568' || 
                t.id.toString() === '273982-568' ||
                t.ticket_number?.includes('273982-568')
            );
            
            if (targetTicket) {
                console.log('‚úÖ Ticket encontrado:', targetTicket);
                console.log('üìã ID:', targetTicket.id);
                console.log('üìã Ticket Number:', targetTicket.ticket_number);
                console.log('üë§ T√©cnico:', targetTicket.assigned_to);
                console.log('üìä Status:', targetTicket.status);
                
                // Testar se o hook funcionaria
                const hasAssignee = !!(targetTicket.assigned_to);
                console.log('‚úÖ Tem t√©cnico?', hasAssignee);
                
                if (hasAssignee) {
                    console.log('üéâ Este ticket DEVERIA mostrar o bot√£o de chat!');
                } else {
                    console.log('‚ùå Este ticket N√ÉO deveria mostrar o bot√£o de chat');
                }
            } else {
                console.log('‚ùå Ticket TKT-273982-568 n√£o encontrado');
                console.log('üìã Tickets dispon√≠veis:');
                tickets.slice(0, 5).forEach(t => {
                    console.log(`   - ID: ${t.id}, Number: ${t.ticket_number}, Status: ${t.status}`);
                });
            }
        } else {
            console.log('‚ùå Erro ao buscar tickets:', response.status);
        }
    } catch (error) {
        console.log('‚ùå Erro:', error.message);
    }
}

// Executar teste
testTicketMapping();

console.log('\nüí° Verifique os logs acima para identificar o problema');
console.log('üîç Poss√≠veis causas:');
console.log('   - Ticket n√£o est√° sendo carregado corretamente');
console.log('   - Mapeamento de ID est√° incorreto');
console.log('   - T√©cnico n√£o est√° sendo reconhecido');
console.log('   - Hook n√£o est√° recebendo o ID correto');
