// Script para testar o ticket espec√≠fico da imagem
// Execute no console do navegador

console.log('üîß Testando ticket espec√≠fico TKT-273982-568...\n');

// Token v√°lido
const validToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsInJvbGUiOiJBZG1pbiIsIm5hbWUiOiJBZG1pbiBUZXN0ZSIsImVtYWlsIjoiYWRtaW5AdGVzdGUuY29tIiwiaWF0IjoxNzU3MDk0MjY3LCJleHAiOjE3NTcxODA2Njd9.BWUmErTRwweGnoc9MY4DYxIwhBgrM4B7daUWWotlrrc';

// Definir token
document.cookie = `auth_token=${validToken}; path=/; max-age=${24 * 60 * 60}`;

console.log('‚úÖ Token definido');

// Fun√ß√£o para testar o ticket espec√≠fico
async function testSpecificTicket() {
    console.log('üîç Testando ticket TKT-273982-568...');
    
    try {
        // Primeiro, buscar todos os tickets para encontrar o correto
        const allTicketsResponse = await fetch('/helpdesk/tickets', {
            headers: {
                'Authorization': `Bearer ${validToken}`,
                'Content-Type': 'application/json'
            }
        });
        
        if (allTicketsResponse.ok) {
            const allTickets = await allTicketsResponse.json();
            console.log('‚úÖ Total de tickets:', allTickets.length);
            
            // Procurar pelo ticket espec√≠fico
            const targetTicket = allTickets.find(t => 
                t.ticket_number === 'TKT-273982-568' || 
                t.ticket_number?.includes('273982-568') ||
                t.id.toString() === '273982-568'
            );
            
            if (targetTicket) {
                console.log('‚úÖ Ticket encontrado:', targetTicket);
                console.log('üìã ID:', targetTicket.id);
                console.log('üìã Ticket Number:', targetTicket.ticket_number);
                console.log('üë§ T√©cnico assigned_to:', targetTicket.assigned_to);
                console.log('üë§ T√©cnico assignee:', targetTicket.assignee);
                console.log('üìä Status:', targetTicket.status);
                
                // Testar se o hook funcionaria
                const hasAssignee = !!(targetTicket.assigned_to || targetTicket.assignee);
                console.log('‚úÖ Tem t√©cnico?', hasAssignee);
                
                if (hasAssignee) {
                    console.log('üéâ Este ticket DEVERIA mostrar o bot√£o de chat!');
                    
                    // Testar API de mensagens
                    const messagesResponse = await fetch(`/api/messages/list?ticket_id=${targetTicket.id}`, {
                        headers: {
                            'Authorization': `Bearer ${validToken}`,
                            'Content-Type': 'application/json'
                        }
                    });
                    
                    if (messagesResponse.ok) {
                        const messagesData = await messagesResponse.json();
                        console.log('‚úÖ Chat access:', messagesData.chatAccess);
                        console.log('‚úÖ Pode acessar?', messagesData.chatAccess.canAccess);
                        console.log('‚úÖ Pode enviar?', messagesData.chatAccess.canSend);
                    } else {
                        console.log('‚ùå Erro na API de mensagens:', messagesResponse.status);
                    }
                } else {
                    console.log('‚ùå Este ticket N√ÉO deveria mostrar o bot√£o de chat');
                }
            } else {
                console.log('‚ùå Ticket TKT-273982-568 n√£o encontrado');
                console.log('üìã Procurando por tickets similares...');
                
                // Procurar por tickets com n√∫meros similares
                const similarTickets = allTickets.filter(t => 
                    t.ticket_number?.includes('273982') ||
                    t.ticket_number?.includes('568') ||
                    t.id.toString().includes('273982') ||
                    t.id.toString().includes('568')
                );
                
                if (similarTickets.length > 0) {
                    console.log('üìã Tickets similares encontrados:');
                    similarTickets.forEach(t => {
                        console.log(`   - ID: ${t.id}, Number: ${t.ticket_number}, Status: ${t.status}, T√©cnico: ${t.assigned_to?.name || 'Nenhum'}`);
                    });
                } else {
                    console.log('üìã Nenhum ticket similar encontrado');
                    console.log('üìã √öltimos 5 tickets:');
                    allTickets.slice(-5).forEach(t => {
                        console.log(`   - ID: ${t.id}, Number: ${t.ticket_number}, Status: ${t.status}, T√©cnico: ${t.assigned_to?.name || 'Nenhum'}`);
                    });
                }
            }
        } else {
            console.log('‚ùå Erro ao buscar tickets:', allTicketsResponse.status);
        }
    } catch (error) {
        console.log('‚ùå Erro:', error.message);
    }
}

// Executar teste
testSpecificTicket();

console.log('\nüí° Verifique os logs acima para identificar o problema');
console.log('üîç Se o ticket n√£o for encontrado, pode ser:');
console.log('   - ID incorreto na imagem');
console.log('   - Ticket foi deletado');
console.log('   - Problema de permiss√£o');
console.log('   - Ticket est√° em outra p√°gina');
