// Script final para testar a corre√ß√£o dos nomes no bot√£o do chat
// Execute no console do navegador

console.log('üîß Testando corre√ß√£o final dos nomes no bot√£o do chat...\n');

// Token v√°lido
const validToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsInJvbGUiOiJBZG1pbiIsIm5hbWUiOiJBZG1pbiBUZXN0ZSIsImVtYWlsIjoiYWRtaW5AdGVzdGUuY29tIiwiaWF0IjoxNzU3MDk0MjY3LCJleHAiOjE3NTcxODA2Njd9.BWUmErTRwweGnoc9MY4DYxIwhBgrM4B7daUWWotlrrc';

// Definir token
document.cookie = `auth_token=${validToken}; path=/; max-age=${24 * 60 * 60}`;

console.log('‚úÖ Token definido');

// Fun√ß√£o para testar a corre√ß√£o
async function testChatButtonFinal() {
    console.log('üîç Testando corre√ß√£o final...');
    
    try {
        // Buscar dados do ticket
        const ticketResponse = await fetch('/helpdesk/tickets/273982-568', {
            headers: {
                'Authorization': `Bearer ${validToken}`,
                'Content-Type': 'application/json'
            }
        });
        
        if (ticketResponse.ok) {
            const ticketData = await ticketResponse.json();
            console.log('‚úÖ Dados do ticket:', ticketData);
            
            // Verificar se h√° t√©cnico atribu√≠do
            if (ticketData.assigned_to) {
                console.log('\nüéØ Cen√°rio atual:');
                console.log('   üë§ Criador:', ticketData.creator?.name || ticketData.created_by?.name);
                console.log('   üë®‚Äçüíº T√©cnico:', ticketData.assigned_to.name);
                console.log('   üë§ Usu√°rio atual (Admin):', 'Administrador');
                
                console.log('\n‚úÖ Comportamento esperado:');
                console.log('   - Se voc√™ estiver logado como T√âCNICO: bot√£o deve mostrar nome do CRIADOR');
                console.log('   - Se voc√™ estiver logado como CRIADOR: bot√£o deve mostrar nome do T√âCNICO');
                console.log('   - Se voc√™ estiver logado como ADMIN: bot√£o deve mostrar nome do T√âCNICO');
                
                console.log('\nüîç Verificando se o bot√£o est√° sendo renderizado...');
                
                // Verificar se h√° bot√µes de chat na p√°gina
                const chatButtons = document.querySelectorAll('button[title*="Abrir chat"]');
                console.log(`   Bot√µes de chat encontrados: ${chatButtons.length}`);
                
                if (chatButtons.length > 0) {
                    chatButtons.forEach((button, index) => {
                        console.log(`   Bot√£o ${index + 1}:`, button.textContent.trim());
                        console.log(`   T√≠tulo: ${button.title}`);
                    });
                } else {
                    console.log('   ‚ùå Nenhum bot√£o de chat encontrado na p√°gina');
                    console.log('   üí° Certifique-se de que est√° na p√°gina de chamados e que h√° t√©cnico atribu√≠do');
                }
                
            } else {
                console.log('‚ùå Nenhum t√©cnico atribu√≠do ao ticket');
                console.log('üí° O bot√£o de chat n√£o deve aparecer quando n√£o h√° t√©cnico');
            }
            
        } else {
            console.log('‚ùå Erro ao buscar ticket:', ticketResponse.status);
        }
    } catch (error) {
        console.log('‚ùå Erro:', error.message);
    }
}

// Executar teste
testChatButtonFinal();

console.log('\nüí° Verifique os logs acima para confirmar se a corre√ß√£o est√° funcionando');
console.log('üîç Para testar completamente:');
console.log('   1. Fa√ßa login como t√©cnico e verifique se o bot√£o mostra o nome do criador');
console.log('   2. Fa√ßa login como criador e verifique se o bot√£o mostra o nome do t√©cnico');
console.log('   3. Fa√ßa login como admin e verifique se o bot√£o mostra o nome do t√©cnico');
