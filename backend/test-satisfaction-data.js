import fetch from 'node-fetch';

async function testSatisfactionData() {
    try {
        console.log('üß™ Testando dados de satisfa√ß√£o...');

        // 1. Fazer login como um agente
        const loginResponse = await fetch('http://localhost:3000/login', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                email: 'cj@gmail.com',
                password: 'Cj123456'
            })
        });

        if (!loginResponse.ok) {
            throw new Error('Falha no login');
        }

        const loginData = await loginResponse.json();
        const token = loginData.token;

        console.log('‚úÖ Login realizado com sucesso');

        // 2. Buscar estat√≠sticas do agente
        const statsResponse = await fetch('http://localhost:3000/helpdesk/agents/my-statistics', {
            method: 'GET',
            headers: {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json'
            }
        });

        if (!statsResponse.ok) {
            throw new Error('Falha ao buscar estat√≠sticas');
        }

        const statsData = await statsResponse.json();
        console.log('üìä Dados de estat√≠sticas:', JSON.stringify(statsData, null, 2));

        // 3. Verificar dados de satisfa√ß√£o
        console.log('\nüîç An√°lise dos dados de satisfa√ß√£o:');
        console.log(`- Satisfa√ß√£o m√©dia: ${statsData.avgSatisfaction}/5`);
        console.log(`- Total de tickets atribu√≠dos: ${statsData.totalAssignedTickets}`);
        console.log(`- Tickets resolvidos: ${statsData.resolvedTickets}`);
        console.log(`- Tempo total de resolu√ß√£o: ${statsData.totalResolutionTime} minutos`);

        // 4. Verificar se h√° tickets com avalia√ß√£o
        const ticketsWithRating = await fetch('http://localhost:3000/helpdesk/agents/my-history?limit=50', {
            method: 'GET',
            headers: {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json'
            }
        });

        if (ticketsWithRating.ok) {
            const ticketsData = await ticketsWithRating.json();
            const ticketsWithSatisfaction = ticketsData.tickets?.filter(t => t.satisfaction_rating !== null) || [];
            
            console.log(`\nüìã Tickets com avalia√ß√£o de satisfa√ß√£o: ${ticketsWithSatisfaction.length}`);
            
            if (ticketsWithSatisfaction.length > 0) {
                console.log('üìä Detalhes dos tickets com avalia√ß√£o:');
                ticketsWithSatisfaction.forEach(ticket => {
                    console.log(`- Ticket #${ticket.ticket_number}: ${ticket.satisfaction_rating}/5 (${ticket.status})`);
                });
            }
        }

        // 5. Verificar dados do admin tamb√©m
        console.log('\nüîç Testando dados do admin...');
        
        const adminLoginResponse = await fetch('http://localhost:3000/login', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                email: 'admin@helpdesk.com',
                password: '123456'
            })
        });

        if (adminLoginResponse.ok) {
            const adminLoginData = await adminLoginResponse.json();
            const adminToken = adminLoginData.token;

            const adminStatsResponse = await fetch('http://localhost:3000/admin/status', {
                method: 'GET',
                headers: {
                    'Authorization': `Bearer ${adminToken}`,
                    'Content-Type': 'application/json'
                }
            });

            if (adminStatsResponse.ok) {
                const adminStatsData = await adminStatsResponse.json();
                console.log('üìä Dados de estat√≠sticas do admin:', JSON.stringify(adminStatsData, null, 2));
                
                if (adminStatsData.tickets) {
                    console.log(`\nüîç Satisfa√ß√£o m√©dia do sistema: ${adminStatsData.tickets.avg_satisfaction}/5`);
                }
            }
        }

        console.log('\n‚úÖ Teste conclu√≠do!');

    } catch (error) {
        console.error('‚ùå Erro durante o teste:', error);
    }
}

testSatisfactionData();
